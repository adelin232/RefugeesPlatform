version: "3.7"

services:
  loki:
    container_name: loki
    image: grafana/loki
    container_name: loki
    volumes:
      - ./loki:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    networks:
      - loki

  promtail:
    container_name: promtail
    image: grafana/promtail
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki

  grafana:
    container_name: grafana
    image: grafana/grafana:master
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - loki
    volumes:
      - ./grafana/grafana-storage:/var/lib/grafana

  mysqldb:
    container_name: mysqldb
    build: ./mysql
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - ./mysql/mysql-data:/var/lib/mysql
    # networks:
    #   network-db:
    #     aliases:
    #       - mysqldb
  
  app:
    container_name: spring-app
    depends_on:
      - mysqldb
    build: ./project
    restart: on-failure
    env_file: ./.env
    ports:
      # - 6868:$SPRING_DOCKER_PORT
      - 8443:8443
    environment:
      # proxy
      VIRTUAL_HOST: $SPRING_PROXY_ADDRESS
      VIRTUAL_PROTO: https
      VIRTUAL_PORT: 8443
      CERT_NAME: spring
      # spring
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    volumes:
      - /project/.m2:/root/.m2
    stdin_open: true
    tty: true
    extra_hosts:
      - "$SPRING_PROXY_ADDRESS:127.0.0.1"
    # networks:
    #   network-db:
    #     aliases:
    #       - app
    #       - spring-app
    #   network-proxy:
    #     aliases:
    #       - app
    #       - spring-app

  adminer:
    container_name: adminer
    depends_on: 
      - mysqldb
    # image: mcaubrey/adminer
    build: ./adminer
    environment:
      # proxy
      VIRTUAL_HOST: $ADMINER_PROXY_ADDRESS
      # VIRTUAL_PROTO: https
      # VIRTUAL_PORT: 6969
      CERT_NAME: adminer
      # adminer
      ADMINER_DEFAULT_SERVER: mysqldb
      ADMINER_DESIGN: 'pepa-linha'
      ADMINER_PLUGINS: 'tables-filter tinymce dump-json dump-alter'
      # ADMINER_DEFAULT_USERNAME: $MYSQLDB_USER
      # ADMINER_DEFAULT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
      # ADMINER_DEFAULT_DATABASE: $MYSQLDB_DATABASE
    ports:
      - 6969:8080
    extra_hosts:
      - "$ADMINER_PROXY_ADDRESS:127.0.0.1"
    # networks:
    #   network-proxy:
    #     aliases:
    #       - adminer

  portainer:
    container_name: portainer
    depends_on:
      - mysqldb
      - adminer
      - app
    # image: portainer/portainer-ce:2.9.3
    build: ./portainer
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer/portainer-data:/data
    ports:
      # - 9000:9000   # http
      - 9443:9443   # https
    environment:
      #proxy
      VIRTUAL_HOST: $PORTAINER_PROXY_ADDRESS
      VIRTUAL_PROTO: https
      VIRTUAL_PORT: 9443
      CERT_NAME: portainer
    extra_hosts:
      - "$PORTAINER_PROXY_ADDRESS:127.0.0.1"
    # networks:
    #   network-proxy:
    #     aliases:
    #       - portainer

  nginx-proxy:
    container_name: nginx-proxy
    depends_on:
      - portainer
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs
    # networks:
    #   network-proxy:
    #     aliases:
    #       - nginx-proxy

    
networks:
    loki:
#   network-db:
#     name: spring-mysql
#   network-proxy:
#     name: reverse-proxy
  
    

# volumes:
  # portainer_data:
